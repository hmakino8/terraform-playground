# aws_db_instance.mysql:
resource "aws_db_instance" "mysql" {
    address                               = "handson2-simple-vpc-db.cb2o8g286hsb.ap-northeast-1.rds.amazonaws.com"
    allocated_storage                     = 20
    apply_immediately                     = false
    arn                                   = "arn:aws:rds:ap-northeast-1:977099018596:db:handson2-simple-vpc-db"
    auto_minor_version_upgrade            = true
    availability_zone                     = "ap-northeast-1c"
    backup_retention_period               = 0
    backup_target                         = "region"
    backup_window                         = "15:39-16:09"
    ca_cert_identifier                    = "rds-ca-rsa2048-g1"
    character_set_name                    = [90mnull[0m[0m
    copy_tags_to_snapshot                 = false
    custom_iam_instance_profile           = [90mnull[0m[0m
    customer_owned_ip_enabled             = false
    db_name                               = [90mnull[0m[0m
    db_subnet_group_name                  = "handson2-simple-vpc-rds-subnet-group"
    dedicated_log_volume                  = false
    delete_automated_backups              = true
    deletion_protection                   = false
    domain                                = [90mnull[0m[0m
    domain_auth_secret_arn                = [90mnull[0m[0m
    domain_dns_ips                        = []
    domain_fqdn                           = [90mnull[0m[0m
    domain_iam_role_name                  = [90mnull[0m[0m
    domain_ou                             = [90mnull[0m[0m
    enabled_cloudwatch_logs_exports       = []
    endpoint                              = "handson2-simple-vpc-db.cb2o8g286hsb.ap-northeast-1.rds.amazonaws.com:3306"
    engine                                = "mysql"
    engine_lifecycle_support              = "open-source-rds-extended-support"
    engine_version                        = "8.0"
    engine_version_actual                 = "8.0.40"
    hosted_zone_id                        = "Z24O6O9L7SGTNB"
    iam_database_authentication_enabled   = false
    id                                    = "db-TXQECILGWMCRNHS2BWYDX3AGLQ"
    identifier                            = "handson2-simple-vpc-db"
    identifier_prefix                     = [90mnull[0m[0m
    instance_class                        = "db.t3.micro"
    iops                                  = 0
    kms_key_id                            = [90mnull[0m[0m
    latest_restorable_time                = [90mnull[0m[0m
    license_model                         = "general-public-license"
    listener_endpoint                     = []
    maintenance_window                    = "fri:14:13-fri:14:43"
    master_user_secret                    = []
    max_allocated_storage                 = 0
    monitoring_interval                   = 0
    monitoring_role_arn                   = [90mnull[0m[0m
    multi_az                              = false
    nchar_character_set_name              = [90mnull[0m[0m
    network_type                          = "IPV4"
    option_group_name                     = "default:mysql-8-0"
    parameter_group_name                  = "default.mysql8.0"
    password                              = (sensitive value)
    performance_insights_enabled          = false
    performance_insights_kms_key_id       = [90mnull[0m[0m
    performance_insights_retention_period = 0
    port                                  = 3306
    publicly_accessible                   = false
    replica_mode                          = [90mnull[0m[0m
    replicas                              = []
    replicate_source_db                   = [90mnull[0m[0m
    resource_id                           = "db-TXQECILGWMCRNHS2BWYDX3AGLQ"
    skip_final_snapshot                   = true
    status                                = "available"
    storage_encrypted                     = false
    storage_throughput                    = 0
    storage_type                          = "gp2"
    tags                                  = {}
    tags_all                              = {}
    timezone                              = [90mnull[0m[0m
    username                              = "admin"
    vpc_security_group_ids                = [
        "sg-07d358943671560c7",
    ]
}

# aws_db_subnet_group.rds:
resource "aws_db_subnet_group" "rds" {
    arn                     = "arn:aws:rds:ap-northeast-1:977099018596:subgrp:handson2-simple-vpc-rds-subnet-group"
    description             = "Managed by Terraform"
    id                      = "handson2-simple-vpc-rds-subnet-group"
    name                    = "handson2-simple-vpc-rds-subnet-group"
    name_prefix             = [90mnull[0m[0m
    subnet_ids              = [
        "subnet-089fc83f046597375",
        "subnet-0c86a02d21f5e9b10",
    ]
    supported_network_types = [
        "IPV4",
    ]
    tags                    = {}
    tags_all                = {}
    vpc_id                  = "vpc-073fd53a6b8062753"
}

# aws_eip.nat_gtw_eip:
resource "aws_eip" "nat_gtw_eip" {
    allocation_id            = "eipalloc-0018708c9810b45e5"
    arn                      = "arn:aws:ec2:ap-northeast-1:977099018596:elastic-ip/eipalloc-0018708c9810b45e5"
    association_id           = "eipassoc-0d650d3973252aabb"
    carrier_ip               = [90mnull[0m[0m
    customer_owned_ip        = [90mnull[0m[0m
    customer_owned_ipv4_pool = [90mnull[0m[0m
    domain                   = "vpc"
    id                       = "eipalloc-0018708c9810b45e5"
    instance                 = [90mnull[0m[0m
    network_border_group     = "ap-northeast-1"
    network_interface        = "eni-00f3a4a3ccd0c5c6d"
    private_dns              = "ip-10-0-0-161.ap-northeast-1.compute.internal"
    private_ip               = "10.0.0.161"
    ptr_record               = [90mnull[0m[0m
    public_dns               = "ec2-18-177-246-43.ap-northeast-1.compute.amazonaws.com"
    public_ip                = "18.177.246.43"
    public_ipv4_pool         = "amazon"
    tags                     = {
        "Name" = "handson2-simple-vpc-nat-gtw-eip"
    }
    tags_all                 = {
        "Name" = "handson2-simple-vpc-nat-gtw-eip"
    }
    vpc                      = true
}

# aws_iam_instance_profile.private_ec2_profile:
resource "aws_iam_instance_profile" "private_ec2_profile" {
    arn         = "arn:aws:iam::977099018596:instance-profile/handson2-simple-vpc-private-ec2-profile"
    create_date = "2025-03-13T06:12:40Z"
    id          = "handson2-simple-vpc-private-ec2-profile"
    name        = "handson2-simple-vpc-private-ec2-profile"
    name_prefix = [90mnull[0m[0m
    path        = "/"
    role        = "handson2-simple-vpc-private-ec2-role"
    tags        = {}
    tags_all    = {}
    unique_id   = "AIPA6G75D2FSECQ2UXPGJ"
}

# aws_iam_role.private_ec2_role:
resource "aws_iam_role" "private_ec2_role" {
    arn                   = "arn:aws:iam::977099018596:role/handson2-simple-vpc-private-ec2-role"
    assume_role_policy    = jsonencode(
        {
            Statement = [
                {
                    Action    = "sts:AssumeRole"
                    Effect    = "Allow"
                    Principal = {
                        Service = "ec2.amazonaws.com"
                    }
                },
            ]
            Version   = "2012-10-17"
        }
    )
    create_date           = "2025-03-13T06:12:39Z"
    description           = [90mnull[0m[0m
    force_detach_policies = false
    id                    = "handson2-simple-vpc-private-ec2-role"
    managed_policy_arns   = [
        "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
    ]
    max_session_duration  = 3600
    name                  = "handson2-simple-vpc-private-ec2-role"
    name_prefix           = [90mnull[0m[0m
    path                  = "/"
    permissions_boundary  = [90mnull[0m[0m
    tags                  = {}
    tags_all              = {}
    unique_id             = "AROA6G75D2FSF7B75GOYG"

    inline_policy {
        name   = "handson2-simple-vpc-rds-policy"
        policy = jsonencode(
            {
                Statement = [
                    {
                        Action   = [
                            "rds:DescribeDBInstances",
                        ]
                        Effect   = "Allow"
                        Resource = "*"
                    },
                ]
                Version   = "2012-10-17"
            }
        )
    }
}

# aws_iam_role_policy.rds_policy:
resource "aws_iam_role_policy" "rds_policy" {
    id          = "handson2-simple-vpc-private-ec2-role:handson2-simple-vpc-rds-policy"
    name        = "handson2-simple-vpc-rds-policy"
    name_prefix = [90mnull[0m[0m
    policy      = jsonencode(
        {
            Statement = [
                {
                    Action   = [
                        "rds:DescribeDBInstances",
                    ]
                    Effect   = "Allow"
                    Resource = "*"
                },
            ]
            Version   = "2012-10-17"
        }
    )
    role        = "handson2-simple-vpc-private-ec2-role"
}

# aws_iam_role_policy_attachment.ssm_policy:
resource "aws_iam_role_policy_attachment" "ssm_policy" {
    id         = "handson2-simple-vpc-private-ec2-role-20250313061240081700000001"
    policy_arn = "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
    role       = "handson2-simple-vpc-private-ec2-role"
}

# aws_instance.private_ec2:
resource "aws_instance" "private_ec2" {
    ami                                  = "ami-094dc5cf74289dfbc"
    arn                                  = "arn:aws:ec2:ap-northeast-1:977099018596:instance/i-0704c633434304514"
    associate_public_ip_address          = false
    availability_zone                    = "ap-northeast-1a"
    cpu_core_count                       = 1
    cpu_threads_per_core                 = 1
    disable_api_stop                     = false
    disable_api_termination              = false
    ebs_optimized                        = false
    get_password_data                    = false
    hibernation                          = false
    host_id                              = [90mnull[0m[0m
    iam_instance_profile                 = "handson2-simple-vpc-private-ec2-profile"
    id                                   = "i-0704c633434304514"
    instance_initiated_shutdown_behavior = "stop"
    instance_lifecycle                   = [90mnull[0m[0m
    instance_state                       = "running"
    instance_type                        = "t2.micro"
    ipv6_address_count                   = 0
    ipv6_addresses                       = []
    key_name                             = [90mnull[0m[0m
    monitoring                           = false
    outpost_arn                          = [90mnull[0m[0m
    password_data                        = [90mnull[0m[0m
    placement_group                      = [90mnull[0m[0m
    placement_partition_number           = 0
    primary_network_interface_id         = "eni-08d00b7c6afd5915e"
    private_dns                          = "ip-10-0-1-17.ap-northeast-1.compute.internal"
    private_ip                           = "10.0.1.17"
    public_dns                           = [90mnull[0m[0m
    public_ip                            = [90mnull[0m[0m
    secondary_private_ips                = []
    security_groups                      = []
    source_dest_check                    = true
    spot_instance_request_id             = [90mnull[0m[0m
    subnet_id                            = "subnet-0c86a02d21f5e9b10"
    tags                                 = {
        "Name" = "handson2-simple-vpc-private-ec2-1a"
    }
    tags_all                             = {
        "Name" = "handson2-simple-vpc-private-ec2-1a"
    }
    tenancy                              = "default"
    user_data_replace_on_change          = false
    vpc_security_group_ids               = [
        "sg-0b182478e280d290b",
    ]

    capacity_reservation_specification {
        capacity_reservation_preference = "open"
    }

    cpu_options {
        amd_sev_snp      = [90mnull[0m[0m
        core_count       = 1
        threads_per_core = 1
    }

    credit_specification {
        cpu_credits = "standard"
    }

    enclave_options {
        enabled = false
    }

    maintenance_options {
        auto_recovery = "default"
    }

    metadata_options {
        http_endpoint               = "enabled"
        http_protocol_ipv6          = "disabled"
        http_put_response_hop_limit = 2
        http_tokens                 = "required"
        instance_metadata_tags      = "disabled"
    }

    private_dns_name_options {
        enable_resource_name_dns_a_record    = false
        enable_resource_name_dns_aaaa_record = false
        hostname_type                        = "ip-name"
    }

    root_block_device {
        delete_on_termination = true
        device_name           = "/dev/xvda"
        encrypted             = false
        iops                  = 3000
        kms_key_id            = [90mnull[0m[0m
        tags                  = {}
        tags_all              = {}
        throughput            = 125
        volume_id             = "vol-051087ee45444d2c8"
        volume_size           = 8
        volume_type           = "gp3"
    }
}

# aws_instance.tmp:
resource "aws_instance" "tmp" {
    ami                                  = "ami-0599b6e53ca798bb2"
    arn                                  = "arn:aws:ec2:ap-northeast-1:977099018596:instance/i-031473f9eda7d7c1b"
    associate_public_ip_address          = false
    availability_zone                    = "ap-northeast-1c"
    cpu_core_count                       = 1
    cpu_threads_per_core                 = 1
    disable_api_stop                     = false
    disable_api_termination              = false
    ebs_optimized                        = false
    get_password_data                    = false
    hibernation                          = false
    host_id                              = [90mnull[0m[0m
    iam_instance_profile                 = [90mnull[0m[0m
    id                                   = "i-031473f9eda7d7c1b"
    instance_initiated_shutdown_behavior = "stop"
    instance_lifecycle                   = [90mnull[0m[0m
    instance_state                       = "running"
    instance_type                        = "t2.micro"
    ipv6_address_count                   = 0
    ipv6_addresses                       = []
    key_name                             = "test-ec2-key"
    monitoring                           = false
    outpost_arn                          = [90mnull[0m[0m
    password_data                        = [90mnull[0m[0m
    placement_group                      = [90mnull[0m[0m
    placement_partition_number           = 0
    primary_network_interface_id         = "eni-042f01b2bc637d952"
    private_dns                          = "ip-172-31-47-247.ap-northeast-1.compute.internal"
    private_ip                           = "172.31.47.247"
    public_dns                           = [90mnull[0m[0m
    public_ip                            = [90mnull[0m[0m
    secondary_private_ips                = []
    security_groups                      = []
    source_dest_check                    = true
    spot_instance_request_id             = [90mnull[0m[0m
    subnet_id                            = "subnet-0d8e2644f387621aa"
    tags                                 = {
        "Name" = "tmp"
    }
    tags_all                             = {
        "Name" = "tmp"
    }
    tenancy                              = "default"
    vpc_security_group_ids               = [
        "sg-02e759756f409820b",
    ]

    capacity_reservation_specification {
        capacity_reservation_preference = "open"
    }

    cpu_options {
        amd_sev_snp      = [90mnull[0m[0m
        core_count       = 1
        threads_per_core = 1
    }

    credit_specification {
        cpu_credits = "standard"
    }

    enclave_options {
        enabled = false
    }

    maintenance_options {
        auto_recovery = "default"
    }

    metadata_options {
        http_endpoint               = "enabled"
        http_protocol_ipv6          = "disabled"
        http_put_response_hop_limit = 2
        http_tokens                 = "required"
        instance_metadata_tags      = "disabled"
    }

    private_dns_name_options {
        enable_resource_name_dns_a_record    = false
        enable_resource_name_dns_aaaa_record = false
        hostname_type                        = "ip-name"
    }

    root_block_device {
        delete_on_termination = true
        device_name           = "/dev/xvda"
        encrypted             = false
        iops                  = 3000
        kms_key_id            = [90mnull[0m[0m
        tags                  = {}
        tags_all              = {}
        throughput            = 125
        volume_id             = "vol-0f46b7596fc035186"
        volume_size           = 8
        volume_type           = "gp3"
    }
}

# aws_internet_gateway.igw:
resource "aws_internet_gateway" "igw" {
    arn      = "arn:aws:ec2:ap-northeast-1:977099018596:internet-gateway/igw-0c81d39a566639a07"
    id       = "igw-0c81d39a566639a07"
    owner_id = "977099018596"
    tags     = {
        "Name" = "handson2-simple-vpc-igw"
    }
    tags_all = {
        "Name" = "handson2-simple-vpc-igw"
    }
    vpc_id   = "vpc-073fd53a6b8062753"
}

# aws_nat_gateway.nat_gtw:
resource "aws_nat_gateway" "nat_gtw" {
    allocation_id                      = "eipalloc-0018708c9810b45e5"
    association_id                     = "eipassoc-0d650d3973252aabb"
    connectivity_type                  = "public"
    id                                 = "nat-0f78f204c51e11283"
    network_interface_id               = "eni-00f3a4a3ccd0c5c6d"
    private_ip                         = "10.0.0.161"
    public_ip                          = "18.177.246.43"
    secondary_allocation_ids           = []
    secondary_private_ip_address_count = 0
    secondary_private_ip_addresses     = []
    subnet_id                          = "subnet-091896a3f9e7d3db4"
    tags                               = {
        "Name" = "handson2-simple-vpc-nat-gtw"
    }
    tags_all                           = {
        "Name" = "handson2-simple-vpc-nat-gtw"
    }
}

# aws_route_table.private_rtb:
resource "aws_route_table" "private_rtb" {
    arn              = "arn:aws:ec2:ap-northeast-1:977099018596:route-table/rtb-0408ea5dc027caf4e"
    id               = "rtb-0408ea5dc027caf4e"
    owner_id         = "977099018596"
    propagating_vgws = []
    route            = [
        {
            carrier_gateway_id         = [90mnull[0m[0m
            cidr_block                 = "0.0.0.0/0"
            core_network_arn           = [90mnull[0m[0m
            destination_prefix_list_id = [90mnull[0m[0m
            egress_only_gateway_id     = [90mnull[0m[0m
            gateway_id                 = [90mnull[0m[0m
            ipv6_cidr_block            = [90mnull[0m[0m
            local_gateway_id           = [90mnull[0m[0m
            nat_gateway_id             = "nat-0f78f204c51e11283"
            network_interface_id       = [90mnull[0m[0m
            transit_gateway_id         = [90mnull[0m[0m
            vpc_endpoint_id            = [90mnull[0m[0m
            vpc_peering_connection_id  = [90mnull[0m[0m
        },
    ]
    tags             = {
        "Name" = "handson2-simple-vpc-private-rtb"
    }
    tags_all         = {
        "Name" = "handson2-simple-vpc-private-rtb"
    }
    vpc_id           = "vpc-073fd53a6b8062753"
}

# aws_route_table.public_rtb:
resource "aws_route_table" "public_rtb" {
    arn              = "arn:aws:ec2:ap-northeast-1:977099018596:route-table/rtb-0e9fc616b8b8a2d98"
    id               = "rtb-0e9fc616b8b8a2d98"
    owner_id         = "977099018596"
    propagating_vgws = []
    route            = [
        {
            carrier_gateway_id         = [90mnull[0m[0m
            cidr_block                 = "0.0.0.0/0"
            core_network_arn           = [90mnull[0m[0m
            destination_prefix_list_id = [90mnull[0m[0m
            egress_only_gateway_id     = [90mnull[0m[0m
            gateway_id                 = "igw-0c81d39a566639a07"
            ipv6_cidr_block            = [90mnull[0m[0m
            local_gateway_id           = [90mnull[0m[0m
            nat_gateway_id             = [90mnull[0m[0m
            network_interface_id       = [90mnull[0m[0m
            transit_gateway_id         = [90mnull[0m[0m
            vpc_endpoint_id            = [90mnull[0m[0m
            vpc_peering_connection_id  = [90mnull[0m[0m
        },
    ]
    tags             = {
        "Name" = "handson2-simple-vpc-public-rtb"
    }
    tags_all         = {
        "Name" = "handson2-simple-vpc-public-rtb"
    }
    vpc_id           = "vpc-073fd53a6b8062753"
}

# aws_route_table_association.private_rtb_assoc_1a:
resource "aws_route_table_association" "private_rtb_assoc_1a" {
    gateway_id     = [90mnull[0m[0m
    id             = "rtbassoc-0af6509515380542b"
    route_table_id = "rtb-0408ea5dc027caf4e"
    subnet_id      = "subnet-0c86a02d21f5e9b10"
}

# aws_route_table_association.private_rtb_assoc_1c:
resource "aws_route_table_association" "private_rtb_assoc_1c" {
    gateway_id     = [90mnull[0m[0m
    id             = "rtbassoc-00207a5646caafb19"
    route_table_id = "rtb-0408ea5dc027caf4e"
    subnet_id      = "subnet-089fc83f046597375"
}

# aws_route_table_association.public_rtb_assoc_1a:
resource "aws_route_table_association" "public_rtb_assoc_1a" {
    gateway_id     = [90mnull[0m[0m
    id             = "rtbassoc-037c14859b85e9ebd"
    route_table_id = "rtb-0e9fc616b8b8a2d98"
    subnet_id      = "subnet-091896a3f9e7d3db4"
}

# aws_security_group.endpoint_sg:
resource "aws_security_group" "endpoint_sg" {
    arn                    = "arn:aws:ec2:ap-northeast-1:977099018596:security-group/sg-0d2e35a15d77ac1ce"
    description            = "security group for endpoint"
    egress                 = []
    id                     = "sg-0d2e35a15d77ac1ce"
    ingress                = [
        {
            cidr_blocks      = [
                "10.0.0.0/16",
            ]
            description      = [90mnull[0m[0m
            from_port        = 443
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = []
            self             = false
            to_port          = 443
        },
    ]
    name                   = "handson2-simple-vpc-endpoint-sg"
    name_prefix            = [90mnull[0m[0m
    owner_id               = "977099018596"
    revoke_rules_on_delete = false
    tags                   = {}
    tags_all               = {}
    vpc_id                 = "vpc-073fd53a6b8062753"
}

# aws_security_group.private_ec2_sg:
resource "aws_security_group" "private_ec2_sg" {
    arn                    = "arn:aws:ec2:ap-northeast-1:977099018596:security-group/sg-0b182478e280d290b"
    description            = "security group for private ec2"
    egress                 = [
        {
            cidr_blocks      = [
                "0.0.0.0/0",
            ]
            description      = [90mnull[0m[0m
            from_port        = 0
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "-1"
            security_groups  = []
            self             = false
            to_port          = 0
        },
    ]
    id                     = "sg-0b182478e280d290b"
    ingress                = []
    name                   = "handson2-simple-vpc-private-ec2-sg"
    name_prefix            = [90mnull[0m[0m
    owner_id               = "977099018596"
    revoke_rules_on_delete = false
    tags                   = {}
    tags_all               = {}
    vpc_id                 = "vpc-073fd53a6b8062753"
}

# aws_security_group.rds_sg:
resource "aws_security_group" "rds_sg" {
    arn                    = "arn:aws:ec2:ap-northeast-1:977099018596:security-group/sg-07d358943671560c7"
    description            = "Security group for RDS"
    egress                 = []
    id                     = "sg-07d358943671560c7"
    ingress                = [
        {
            cidr_blocks      = []
            description      = [90mnull[0m[0m
            from_port        = 3306
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = [
                "sg-0b182478e280d290b",
            ]
            self             = false
            to_port          = 3306
        },
    ]
    name                   = "handson2-simple-vpc-rds-sg"
    name_prefix            = [90mnull[0m[0m
    owner_id               = "977099018596"
    revoke_rules_on_delete = false
    tags                   = {}
    tags_all               = {}
    vpc_id                 = "vpc-073fd53a6b8062753"
}

# aws_subnet.private_subnet_1a:
resource "aws_subnet" "private_subnet_1a" {
    arn                                            = "arn:aws:ec2:ap-northeast-1:977099018596:subnet/subnet-0c86a02d21f5e9b10"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "ap-northeast-1a"
    availability_zone_id                           = "apne1-az4"
    cidr_block                                     = "10.0.1.0/24"
    customer_owned_ipv4_pool                       = [90mnull[0m[0m
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-0c86a02d21f5e9b10"
    ipv6_cidr_block                                = [90mnull[0m[0m
    ipv6_cidr_block_association_id                 = [90mnull[0m[0m
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = false
    outpost_arn                                    = [90mnull[0m[0m
    owner_id                                       = "977099018596"
    private_dns_hostname_type_on_launch            = "ip-name"
    tags                                           = {
        "Name" = "handson2-simple-vpc-private-subnet-1a"
    }
    tags_all                                       = {
        "Name" = "handson2-simple-vpc-private-subnet-1a"
    }
    vpc_id                                         = "vpc-073fd53a6b8062753"
}

# aws_subnet.private_subnet_1c:
resource "aws_subnet" "private_subnet_1c" {
    arn                                            = "arn:aws:ec2:ap-northeast-1:977099018596:subnet/subnet-089fc83f046597375"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "ap-northeast-1c"
    availability_zone_id                           = "apne1-az1"
    cidr_block                                     = "10.0.2.0/24"
    customer_owned_ipv4_pool                       = [90mnull[0m[0m
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-089fc83f046597375"
    ipv6_cidr_block                                = [90mnull[0m[0m
    ipv6_cidr_block_association_id                 = [90mnull[0m[0m
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = false
    outpost_arn                                    = [90mnull[0m[0m
    owner_id                                       = "977099018596"
    private_dns_hostname_type_on_launch            = "ip-name"
    tags                                           = {
        "Name" = "handson2-simple-vpc-private-subnet-1c"
    }
    tags_all                                       = {
        "Name" = "handson2-simple-vpc-private-subnet-1c"
    }
    vpc_id                                         = "vpc-073fd53a6b8062753"
}

# aws_subnet.public_subnet_1a:
resource "aws_subnet" "public_subnet_1a" {
    arn                                            = "arn:aws:ec2:ap-northeast-1:977099018596:subnet/subnet-091896a3f9e7d3db4"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "ap-northeast-1a"
    availability_zone_id                           = "apne1-az4"
    cidr_block                                     = "10.0.0.0/24"
    customer_owned_ipv4_pool                       = [90mnull[0m[0m
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-091896a3f9e7d3db4"
    ipv6_cidr_block                                = [90mnull[0m[0m
    ipv6_cidr_block_association_id                 = [90mnull[0m[0m
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = true
    outpost_arn                                    = [90mnull[0m[0m
    owner_id                                       = "977099018596"
    private_dns_hostname_type_on_launch            = "ip-name"
    tags                                           = {
        "Name" = "handson2-simple-vpc-public-subnet-1a"
    }
    tags_all                                       = {
        "Name" = "handson2-simple-vpc-public-subnet-1a"
    }
    vpc_id                                         = "vpc-073fd53a6b8062753"
}

# aws_vpc.vpc:
resource "aws_vpc" "vpc" {
    arn                                  = "arn:aws:ec2:ap-northeast-1:977099018596:vpc/vpc-073fd53a6b8062753"
    assign_generated_ipv6_cidr_block     = false
    cidr_block                           = "10.0.0.0/16"
    default_network_acl_id               = "acl-0eafcc40069c9d926"
    default_route_table_id               = "rtb-027321afa34db14b0"
    default_security_group_id            = "sg-0b3fc6938fa4a0325"
    dhcp_options_id                      = "dopt-05ef9628874c2659e"
    enable_dns_hostnames                 = true
    enable_dns_support                   = true
    enable_network_address_usage_metrics = false
    id                                   = "vpc-073fd53a6b8062753"
    instance_tenancy                     = "default"
    ipv6_association_id                  = [90mnull[0m[0m
    ipv6_cidr_block                      = [90mnull[0m[0m
    ipv6_cidr_block_network_border_group = [90mnull[0m[0m
    ipv6_ipam_pool_id                    = [90mnull[0m[0m
    ipv6_netmask_length                  = 0
    main_route_table_id                  = "rtb-027321afa34db14b0"
    owner_id                             = "977099018596"
    tags                                 = {
        "Name" = "handson2-simple-vpc-vpc"
    }
    tags_all                             = {
        "Name" = "handson2-simple-vpc-vpc"
    }
}

# aws_vpc_endpoint.ec2messages:
resource "aws_vpc_endpoint" "ec2messages" {
    arn                        = "arn:aws:ec2:ap-northeast-1:977099018596:vpc-endpoint/vpce-080d66bf77fb0391d"
    cidr_blocks                = []
    dns_entry                  = [
        {
            dns_name       = "vpce-080d66bf77fb0391d-tjl1sb9s.ec2messages.ap-northeast-1.vpce.amazonaws.com"
            hosted_zone_id = "Z2E726K9Y6RL4W"
        },
        {
            dns_name       = "vpce-080d66bf77fb0391d-tjl1sb9s-ap-northeast-1a.ec2messages.ap-northeast-1.vpce.amazonaws.com"
            hosted_zone_id = "Z2E726K9Y6RL4W"
        },
        {
            dns_name       = "ec2messages.ap-northeast-1.amazonaws.com"
            hosted_zone_id = "Z00362191HJB5S5U2NJ8U"
        },
    ]
    id                         = "vpce-080d66bf77fb0391d"
    ip_address_type            = "ipv4"
    network_interface_ids      = [
        "eni-088e9938a9523c881",
    ]
    owner_id                   = "977099018596"
    policy                     = jsonencode(
        {
            Statement = [
                {
                    Action    = "*"
                    Effect    = "Allow"
                    Principal = "*"
                    Resource  = "*"
                },
            ]
        }
    )
    private_dns_enabled        = true
    requester_managed          = false
    resource_configuration_arn = [90mnull[0m[0m
    route_table_ids            = []
    security_group_ids         = [
        "sg-0d2e35a15d77ac1ce",
    ]
    service_name               = "com.amazonaws.ap-northeast-1.ec2messages"
    service_network_arn        = [90mnull[0m[0m
    service_region             = "ap-northeast-1"
    state                      = "available"
    subnet_ids                 = [
        "subnet-091896a3f9e7d3db4",
    ]
    tags                       = {}
    tags_all                   = {}
    vpc_endpoint_type          = "Interface"
    vpc_id                     = "vpc-073fd53a6b8062753"

    dns_options {
        dns_record_ip_type                             = "ipv4"
        private_dns_only_for_inbound_resolver_endpoint = false
    }

    subnet_configuration {
        ipv4      = "10.0.0.243"
        ipv6      = [90mnull[0m[0m
        subnet_id = "subnet-091896a3f9e7d3db4"
    }
}

# aws_vpc_endpoint.ssm:
resource "aws_vpc_endpoint" "ssm" {
    arn                        = "arn:aws:ec2:ap-northeast-1:977099018596:vpc-endpoint/vpce-033d22a8e213257e4"
    cidr_blocks                = []
    dns_entry                  = [
        {
            dns_name       = "vpce-033d22a8e213257e4-nho421sp.ssm.ap-northeast-1.vpce.amazonaws.com"
            hosted_zone_id = "Z2E726K9Y6RL4W"
        },
        {
            dns_name       = "vpce-033d22a8e213257e4-nho421sp-ap-northeast-1a.ssm.ap-northeast-1.vpce.amazonaws.com"
            hosted_zone_id = "Z2E726K9Y6RL4W"
        },
        {
            dns_name       = "ssm.ap-northeast-1.amazonaws.com"
            hosted_zone_id = "Z0412222IN85F0A9981B"
        },
    ]
    id                         = "vpce-033d22a8e213257e4"
    ip_address_type            = "ipv4"
    network_interface_ids      = [
        "eni-0ee249985f1699887",
    ]
    owner_id                   = "977099018596"
    policy                     = jsonencode(
        {
            Statement = [
                {
                    Action    = "*"
                    Effect    = "Allow"
                    Principal = "*"
                    Resource  = "*"
                },
            ]
        }
    )
    private_dns_enabled        = true
    requester_managed          = false
    resource_configuration_arn = [90mnull[0m[0m
    route_table_ids            = []
    security_group_ids         = [
        "sg-0d2e35a15d77ac1ce",
    ]
    service_name               = "com.amazonaws.ap-northeast-1.ssm"
    service_network_arn        = [90mnull[0m[0m
    service_region             = "ap-northeast-1"
    state                      = "available"
    subnet_ids                 = [
        "subnet-091896a3f9e7d3db4",
    ]
    tags                       = {}
    tags_all                   = {}
    vpc_endpoint_type          = "Interface"
    vpc_id                     = "vpc-073fd53a6b8062753"

    dns_options {
        dns_record_ip_type                             = "ipv4"
        private_dns_only_for_inbound_resolver_endpoint = false
    }

    subnet_configuration {
        ipv4      = "10.0.0.25"
        ipv6      = [90mnull[0m[0m
        subnet_id = "subnet-091896a3f9e7d3db4"
    }
}

# aws_vpc_endpoint.ssmmessages:
resource "aws_vpc_endpoint" "ssmmessages" {
    arn                        = "arn:aws:ec2:ap-northeast-1:977099018596:vpc-endpoint/vpce-027718285d787630a"
    cidr_blocks                = []
    dns_entry                  = [
        {
            dns_name       = "vpce-027718285d787630a-3ne33jbz.ssmmessages.ap-northeast-1.vpce.amazonaws.com"
            hosted_zone_id = "Z2E726K9Y6RL4W"
        },
        {
            dns_name       = "vpce-027718285d787630a-3ne33jbz-ap-northeast-1a.ssmmessages.ap-northeast-1.vpce.amazonaws.com"
            hosted_zone_id = "Z2E726K9Y6RL4W"
        },
        {
            dns_name       = "ssmmessages.ap-northeast-1.amazonaws.com"
            hosted_zone_id = "Z03647322FC8LY7FFTA7M"
        },
    ]
    id                         = "vpce-027718285d787630a"
    ip_address_type            = "ipv4"
    network_interface_ids      = [
        "eni-084ff19b7dcf3e0b8",
    ]
    owner_id                   = "977099018596"
    policy                     = jsonencode(
        {
            Statement = [
                {
                    Action    = "*"
                    Effect    = "Allow"
                    Principal = "*"
                    Resource  = "*"
                },
            ]
        }
    )
    private_dns_enabled        = true
    requester_managed          = false
    resource_configuration_arn = [90mnull[0m[0m
    route_table_ids            = []
    security_group_ids         = [
        "sg-0d2e35a15d77ac1ce",
    ]
    service_name               = "com.amazonaws.ap-northeast-1.ssmmessages"
    service_network_arn        = [90mnull[0m[0m
    service_region             = "ap-northeast-1"
    state                      = "available"
    subnet_ids                 = [
        "subnet-091896a3f9e7d3db4",
    ]
    tags                       = {}
    tags_all                   = {}
    vpc_endpoint_type          = "Interface"
    vpc_id                     = "vpc-073fd53a6b8062753"

    dns_options {
        dns_record_ip_type                             = "ipv4"
        private_dns_only_for_inbound_resolver_endpoint = false
    }

    subnet_configuration {
        ipv4      = "10.0.0.93"
        ipv6      = [90mnull[0m[0m
        subnet_id = "subnet-091896a3f9e7d3db4"
    }
}
